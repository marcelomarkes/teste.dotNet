//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_bibliotecaEntities : DbContext
    {
        public db_bibliotecaEntities()
            : base("name=db_bibliotecaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tb_autor> tb_autor { get; set; }
        public virtual DbSet<tb_categoria> tb_categoria { get; set; }
        public virtual DbSet<tb_editora> tb_editora { get; set; }
        public virtual DbSet<tb_usuario> tb_usuario { get; set; }
        public virtual DbSet<tb_livro> tb_livro { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_CONSULTA_AUTOR_Result> SP_CONSULTA_AUTOR(string consultabuscar)
        {
            var consultabuscarParameter = consultabuscar != null ?
                new ObjectParameter("consultabuscar", consultabuscar) :
                new ObjectParameter("consultabuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSULTA_AUTOR_Result>("SP_CONSULTA_AUTOR", consultabuscarParameter);
        }
    
        public virtual ObjectResult<SP_CONSULTA_CATEGORIA_Result> SP_CONSULTA_CATEGORIA(string consultabuscar)
        {
            var consultabuscarParameter = consultabuscar != null ?
                new ObjectParameter("consultabuscar", consultabuscar) :
                new ObjectParameter("consultabuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSULTA_CATEGORIA_Result>("SP_CONSULTA_CATEGORIA", consultabuscarParameter);
        }
    
        public virtual ObjectResult<SP_CONSULTA_EDITORA_Result> SP_CONSULTA_EDITORA(string consultabuscar)
        {
            var consultabuscarParameter = consultabuscar != null ?
                new ObjectParameter("consultabuscar", consultabuscar) :
                new ObjectParameter("consultabuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSULTA_EDITORA_Result>("SP_CONSULTA_EDITORA", consultabuscarParameter);
        }
    
        public virtual ObjectResult<SP_CONSULTA_LIVRO_Result> SP_CONSULTA_LIVRO(string consultabuscar, string consultacolecao, string consultaedicao)
        {
            var consultabuscarParameter = consultabuscar != null ?
                new ObjectParameter("consultabuscar", consultabuscar) :
                new ObjectParameter("consultabuscar", typeof(string));
    
            var consultacolecaoParameter = consultacolecao != null ?
                new ObjectParameter("consultacolecao", consultacolecao) :
                new ObjectParameter("consultacolecao", typeof(string));
    
            var consultaedicaoParameter = consultaedicao != null ?
                new ObjectParameter("consultaedicao", consultaedicao) :
                new ObjectParameter("consultaedicao", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSULTA_LIVRO_Result>("SP_CONSULTA_LIVRO", consultabuscarParameter, consultacolecaoParameter, consultaedicaoParameter);
        }
    
        public virtual ObjectResult<SP_CONSULTA_USUARIO_Result> SP_CONSULTA_USUARIO(string consultabuscar)
        {
            var consultabuscarParameter = consultabuscar != null ?
                new ObjectParameter("consultabuscar", consultabuscar) :
                new ObjectParameter("consultabuscar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CONSULTA_USUARIO_Result>("SP_CONSULTA_USUARIO", consultabuscarParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_DELETAR_AUTOR(Nullable<int> au_cod)
        {
            var au_codParameter = au_cod.HasValue ?
                new ObjectParameter("au_cod", au_cod) :
                new ObjectParameter("au_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETAR_AUTOR", au_codParameter);
        }
    
        public virtual int SP_DELETAR_CATEGORIA(Nullable<int> ct_cod)
        {
            var ct_codParameter = ct_cod.HasValue ?
                new ObjectParameter("ct_cod", ct_cod) :
                new ObjectParameter("ct_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETAR_CATEGORIA", ct_codParameter);
        }
    
        public virtual int SP_DELETAR_EDITORA(Nullable<int> ed_cod)
        {
            var ed_codParameter = ed_cod.HasValue ?
                new ObjectParameter("ed_cod", ed_cod) :
                new ObjectParameter("ed_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETAR_EDITORA", ed_codParameter);
        }
    
        public virtual int SP_DELETAR_LIVRO(Nullable<int> li_cod)
        {
            var li_codParameter = li_cod.HasValue ?
                new ObjectParameter("li_cod", li_cod) :
                new ObjectParameter("li_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETAR_LIVRO", li_codParameter);
        }
    
        public virtual int SP_DELETAR_USUARIO(Nullable<int> us_cod)
        {
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETAR_USUARIO", us_codParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_EDITAR_AUTOR(ObjectParameter au_cod, string au_nome, Nullable<int> us_cod)
        {
            var au_nomeParameter = au_nome != null ?
                new ObjectParameter("au_nome", au_nome) :
                new ObjectParameter("au_nome", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDITAR_AUTOR", au_cod, au_nomeParameter, us_codParameter);
        }
    
        public virtual int SP_EDITAR_CATEGORIA(ObjectParameter ct_cod, string ct_nome)
        {
            var ct_nomeParameter = ct_nome != null ?
                new ObjectParameter("ct_nome", ct_nome) :
                new ObjectParameter("ct_nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDITAR_CATEGORIA", ct_cod, ct_nomeParameter);
        }
    
        public virtual int SP_EDITAR_EDITORA(ObjectParameter ed_cod, string ed_nome)
        {
            var ed_nomeParameter = ed_nome != null ?
                new ObjectParameter("ed_nome", ed_nome) :
                new ObjectParameter("ed_nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDITAR_EDITORA", ed_cod, ed_nomeParameter);
        }
    
        public virtual int SP_EDITAR_LIVRO(ObjectParameter li_cod, string li_nome, string li_colecao, Nullable<int> li_ano, string li_edicao, Nullable<int> us_cod, Nullable<int> ct_cod, Nullable<int> au_cod, Nullable<int> ed_cod)
        {
            var li_nomeParameter = li_nome != null ?
                new ObjectParameter("li_nome", li_nome) :
                new ObjectParameter("li_nome", typeof(string));
    
            var li_colecaoParameter = li_colecao != null ?
                new ObjectParameter("li_colecao", li_colecao) :
                new ObjectParameter("li_colecao", typeof(string));
    
            var li_anoParameter = li_ano.HasValue ?
                new ObjectParameter("li_ano", li_ano) :
                new ObjectParameter("li_ano", typeof(int));
    
            var li_edicaoParameter = li_edicao != null ?
                new ObjectParameter("li_edicao", li_edicao) :
                new ObjectParameter("li_edicao", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            var ct_codParameter = ct_cod.HasValue ?
                new ObjectParameter("ct_cod", ct_cod) :
                new ObjectParameter("ct_cod", typeof(int));
    
            var au_codParameter = au_cod.HasValue ?
                new ObjectParameter("au_cod", au_cod) :
                new ObjectParameter("au_cod", typeof(int));
    
            var ed_codParameter = ed_cod.HasValue ?
                new ObjectParameter("ed_cod", ed_cod) :
                new ObjectParameter("ed_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDITAR_LIVRO", li_cod, li_nomeParameter, li_colecaoParameter, li_anoParameter, li_edicaoParameter, us_codParameter, ct_codParameter, au_codParameter, ed_codParameter);
        }
    
        public virtual int SP_EDITAR_USUARIO(ObjectParameter us_cod, string us_login, string us_senha)
        {
            var us_loginParameter = us_login != null ?
                new ObjectParameter("us_login", us_login) :
                new ObjectParameter("us_login", typeof(string));
    
            var us_senhaParameter = us_senha != null ?
                new ObjectParameter("us_senha", us_senha) :
                new ObjectParameter("us_senha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_EDITAR_USUARIO", us_cod, us_loginParameter, us_senhaParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_INSERIR_AUTOR(ObjectParameter au_cod, string au_nome, Nullable<int> us_cod)
        {
            var au_nomeParameter = au_nome != null ?
                new ObjectParameter("au_nome", au_nome) :
                new ObjectParameter("au_nome", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERIR_AUTOR", au_cod, au_nomeParameter, us_codParameter);
        }
    
        public virtual int SP_INSERIR_CATEGORIA(ObjectParameter ct_cod, string ct_nome, Nullable<int> us_cod)
        {
            var ct_nomeParameter = ct_nome != null ?
                new ObjectParameter("ct_nome", ct_nome) :
                new ObjectParameter("ct_nome", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERIR_CATEGORIA", ct_cod, ct_nomeParameter, us_codParameter);
        }
    
        public virtual int SP_INSERIR_EDITORA(ObjectParameter ed_cod, string ed_nome, Nullable<int> us_cod)
        {
            var ed_nomeParameter = ed_nome != null ?
                new ObjectParameter("ed_nome", ed_nome) :
                new ObjectParameter("ed_nome", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERIR_EDITORA", ed_cod, ed_nomeParameter, us_codParameter);
        }
    
        public virtual int SP_INSERIR_LIVRO(ObjectParameter li_cod, string li_nome, string li_colecao, Nullable<int> li_ano, string li_edicao, Nullable<int> us_cod, Nullable<int> ct_cod, Nullable<int> au_cod, Nullable<int> ed_cod)
        {
            var li_nomeParameter = li_nome != null ?
                new ObjectParameter("li_nome", li_nome) :
                new ObjectParameter("li_nome", typeof(string));
    
            var li_colecaoParameter = li_colecao != null ?
                new ObjectParameter("li_colecao", li_colecao) :
                new ObjectParameter("li_colecao", typeof(string));
    
            var li_anoParameter = li_ano.HasValue ?
                new ObjectParameter("li_ano", li_ano) :
                new ObjectParameter("li_ano", typeof(int));
    
            var li_edicaoParameter = li_edicao != null ?
                new ObjectParameter("li_edicao", li_edicao) :
                new ObjectParameter("li_edicao", typeof(string));
    
            var us_codParameter = us_cod.HasValue ?
                new ObjectParameter("us_cod", us_cod) :
                new ObjectParameter("us_cod", typeof(int));
    
            var ct_codParameter = ct_cod.HasValue ?
                new ObjectParameter("ct_cod", ct_cod) :
                new ObjectParameter("ct_cod", typeof(int));
    
            var au_codParameter = au_cod.HasValue ?
                new ObjectParameter("au_cod", au_cod) :
                new ObjectParameter("au_cod", typeof(int));
    
            var ed_codParameter = ed_cod.HasValue ?
                new ObjectParameter("ed_cod", ed_cod) :
                new ObjectParameter("ed_cod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERIR_LIVRO", li_cod, li_nomeParameter, li_colecaoParameter, li_anoParameter, li_edicaoParameter, us_codParameter, ct_codParameter, au_codParameter, ed_codParameter);
        }
    
        public virtual int SP_INSERIR_USUARIO(ObjectParameter us_cod, string us_login, string us_senha)
        {
            var us_loginParameter = us_login != null ?
                new ObjectParameter("us_login", us_login) :
                new ObjectParameter("us_login", typeof(string));
    
            var us_senhaParameter = us_senha != null ?
                new ObjectParameter("us_senha", us_senha) :
                new ObjectParameter("us_senha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERIR_USUARIO", us_cod, us_loginParameter, us_senhaParameter);
        }
    
        public virtual ObjectResult<SP_MOSTRAR_AUTOR_Result> SP_MOSTRAR_AUTOR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRAR_AUTOR_Result>("SP_MOSTRAR_AUTOR");
        }
    
        public virtual ObjectResult<SP_MOSTRAR_CATEGORIA_Result> SP_MOSTRAR_CATEGORIA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRAR_CATEGORIA_Result>("SP_MOSTRAR_CATEGORIA");
        }
    
        public virtual ObjectResult<SP_MOSTRAR_EDITORA_Result> SP_MOSTRAR_EDITORA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRAR_EDITORA_Result>("SP_MOSTRAR_EDITORA");
        }
    
        public virtual ObjectResult<SP_MOSTRAR_LIVRO_Result> SP_MOSTRAR_LIVRO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRAR_LIVRO_Result>("SP_MOSTRAR_LIVRO");
        }
    
        public virtual ObjectResult<SP_MOSTRAR_USUARIO_Result> SP_MOSTRAR_USUARIO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_MOSTRAR_USUARIO_Result>("SP_MOSTRAR_USUARIO");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
